@using BiF.Web.ViewModels.Match
@model MatchVM

@{
    List<SelectListItem> carrierList = (new[] {"", "FedEx", "UPS", "USPS", "Other"}).Select(x => new SelectListItem {Text = x, Value = x}).ToList();
}

<div style="margin: 0 auto; max-width: 800px" class="body-content">

    <div style="display: flex; justify-content: space-between; align-content: flex-start">

        <div>
            
            <h3>Match Information</h3>

            <table style="width: 320px; margin: auto">

        <tr>
            <td>
                <b>Full Name</b>
            </td>
            <td>
                @Model.Name
            </td>
        </tr>
        <tr>
            <td>
                <b>Reddit Username</b>
            </td>
            <td>
                <a href="https://reddit.com/u/@Model.RedditUsername" target="_blank">@Model.RedditUsername</a>
            </td>
        </tr>
        <tr>
            <td>
                <b>Untappd Username</b>
            </td>
            <td>
                <a href="https://untappd.com/user/@Model.UntappdUsername" target="_blank">
                    @Model.UntappdUsername</a>
            </td>
        </tr>
            
    </table>
    
    <h3>Shipping Information</h3>

            <table style="width: 320px; margin: auto">

                <tr style="vertical-align: top">
                    <td>
                        <b>Address</b>
                    </td>
                    <td>
                        @Model.Address<br />
                        @Model.City, @Model.State<br />
                        @Model.Zip
                    </td>
                </tr>
        
                <tr>
                    <td>
                        <b>Phone</b>
                    </td>
                    <td>@Model.Phone</td>
                </tr>
        
                @if (!string.IsNullOrWhiteSpace(Model.DeliveryNotes)) {
                    <tr>
                        <td colspan="2">
                            <b>Delivery Instructions</b><br/>
                            @Model.DeliveryNotes
                        </td>
                    </tr>
                }
            </table>
            
            <table style="display: none; margin-top: 25px; width: 320px;" id="shippingForm">
                <tr>
                    <td colspan="2">
                        <label>
                            @Html.CheckBox("isShipped", Model.ShipDate != null, new { style = "transform: scale(1.6); margin-right: 8px", onchange = "toggleShipping()" }) Mark Shipped
                        </label>
                    </td>
                </tr>
                <tr>
                    <td>
                        <b>Tracking</b>
                    </td>
                    <td>
                        @Html.TextBoxFor(x => x.TrackingNo, new { style = "width: 13em", disabled = "disabled" })
                    </td>
                </tr>

                <tr>
                    <td>
                        <b>Carrier</b>
                    </td>
                    <td>
                        @Html.DropDownListFor(x => x.Carrier, carrierList, new { disabled = "disabled" })
                        <input type="button" id="saveShipping" value="Save" onclick="saveShipping()" style="margin-left: 30px;  padding: 0 2px; width: 100px; display: none;" />
                    </td>
                </tr>

            </table>
           
            
            <table style="display: none; margin-top: 25px; width: 320px;" id="shippingInfo">
                <tr>
                    <td>
                        <b>Tracking</b>
                    </td>
                    <td id="trackingNo">
                        @Model.TrackingNo
                    </td>
                </tr>

                <tr>
                    <td>
                        <b>Carrier</b>
                    </td>
                    <td id="carrier">
                        @Model.Carrier
                    </td>
                </tr>
                <tr>
                    <td colspan="2" >
                        <i>Shipped <span id="shipDate">@(Model.ShipDate?.ToShortDateString())</span></i>
                        <input type="button" value="Edit" onclick="editShipping()" style="margin-left: 20px; padding: 0 2px; width: 100px"/>
                    </td>
                </tr>
            </table>


        </div>
        <div>
            <h3>Flavor Preferences</h3>

            <table style="text-align: center" class="bif-table">
                <colgroup>
                    <col style="width:100px" />
                    <col style="width:80px" />
                    <col style="width:80px" />
                    <col style="width:80px" />
                    <col style="width:80px" />
                </colgroup>
                <thead>
                    <tr>
                        <td></td>
                        <td>LOVE IT!</td>
                        <td>Like It</td>
                        <td>Maybe</td>
                        <td>NO!</td>
                    </tr>
                </thead>
                <tbody>
                @foreach (string flavor in Model.Flavors.Keys)
                {
                    <tr>
                        <td style="text-align: left"><b>@flavor</b></td>
                        @Html.Raw(string.Join(Environment.NewLine, Enumerable.Range(1, 4).Select(x => $"<td>{(Model.Flavors[flavor] == x ? "X" : "")}</td>")))
                    </tr>
                }
                </tbody>
                <tfoot></tfoot>
            </table>
        </div>
    </div>
   
    <div style="margin-top: 15px">
        <b>What else should Santa know?</b><br/>
        @Model.Comments
    </div>

</div>

@section Scripts {
    <script>

        $(function() {
            var isShipped = @((Model.ShipDate != null).ToString().ToLower());

            $('#shippingInfo').toggle(isShipped);
            $('#shippingForm').toggle(!isShipped);

        });

        function toggleShipping() {
            var isShipped = $('#isShipped').prop('checked');

            $('#saveShipping').toggle(isShipped);
            $('#TrackingNo, #Carrier').prop('disabled', !isShipped);

        }


        function saveShipping() {
            var data = {
                senderId: '@Model.SenderId',
                trackingNo: $('#TrackingNo').val(),
                carrier: $('#Carrier').val()
            }

            $.post('@Url.Action("MarkShipped")', data, function(d) {
                if (d.Success) {

                    $('#trackingNo').text($('#TrackingNo').val());
                    $('#carrier').text($('#Carrier').val());
                    var date = new Date();
                    $('#shipDate').text((date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear() );

                    $('#shippingInfo').toggle(true);
                    $('#shippingForm').toggle(false);
                }
            });

        }

        function editShipping() {
            //$('#IsShipped').prop('checked', true);
            toggleShipping();

            $('#shippingInfo').toggle(false);
            $('#shippingForm').toggle(true);
        }

    </script>

}