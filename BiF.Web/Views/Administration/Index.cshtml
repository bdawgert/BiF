@using BiF.Web.ViewModels.Administration
@model IndexVM

@{
    ViewBag.Title = "BeerItForward | Administration";

    List<SelectListItem> exclusionsList = Enumerable.Range(2, 10).Select(x => new SelectListItem {Value = x.ToString(), Text = x.ToString()}).ToList();
}


@functions {

    string displayUserStatus(int userStatus) {
        string imgClass = null;
        switch (userStatus) {
            case 1:
                return "icon-userstatus-approved";
            case -1:
                return "icon-userstatus-notapproved";
            default:
                return "icon-userstatus-none";
        }
    }

}

<div class="body-content" style="width: 800px">
    
    <h2>Administration</h2>
    
    <h3>Exchanges</h3>
    <table class="bif-table" style="width: 100%">
        <colgroup>
            <col style="width: 200px;" />
            <col style="width: 50px;" />
            <col />
            <col style="width: 50px;" />
            <col style="width: 100px;" />
        </colgroup>
    <thead>
        <tr>
            <td>Name</td>
            <td></td>
            <td>Description</td>
            <td></td>
            <td>Status</td>
        </tr>
    </thead>
    <tbody>
    @foreach (ExchangeInformation exchange in Model.Exchanges) {
        <tr id="exchange_@exchange.Id" data-id="@exchange.Id">
            <td>@exchange.Name</td>
            <td><div class="icon icon-hover icon-config" onclick="window.location='@Url.Action("Edit", "Exchanges")/@exchange.Id'"></div></td>
            <td>@exchange.Description</td>
            <td><div class="icon icon-hover icon-list" onclick="window.location='@Url.Action("Assign", "Exchanges")/@exchange.Id'"></div></td>
            <td>
                @if (exchange.CloseDate == null || exchange.OpenDate == null)
                {
                    @:Unknown
                }
                else if (exchange.OpenDate.Value > DateTime.Now)
                {
                    @:Pending
                }
                else if (exchange.CloseDate.Value < DateTime.Now)
                {
                    @Html.ActionLink("Closed", "ViewStatus", "Exchanges", new { id = exchange.Id }, null )
                }
                else if (exchange.MatchDate.HasValue && exchange.MatchDate.Value < DateTime.Now)
                {
                    @Html.ActionLink("Matched", "ViewStatus", "Exchanges", new { id = exchange.Id }, null )
                }

                else {
                    @:Open
                }
            </td>
        </tr>
    }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="5" style="text-align: right"><input type="button" value="Add Exchange" onclick="window.location='@Url.Action("Add", "Exchanges")'" /></td>
        </tr>
    </tfoot>
    </table>    

    <h3>Users</h3>
    <table class="bif-table" style="width: 100%">
        <colgroup>
            <col />
            <col style="width: 100px;" />
            <col style="width: 100px;" />
            <col style="width: 100px;" />
            <col style="width: 100px;" />
            <col style="width: 100px;" />
            <col style="width: 50px;" />
        </colgroup>
        <thead>
            <tr>
                <td>Username</td>
                <td>Profile</td>
                <td>Status</td>
                <td>Rating</td>
                <td># Excl.</td>
                <td>Admin</td>
                <td>Exchanges</td>
            </tr>
        </thead>
        <tbody>
        @foreach (UserInformation user in Model.Users) {
            <tr id="user_@user.Id" data-id="@user.Id">
                <td>@user.Username</td>
                <td>
                    @if (user.HasProfile) {
                        <div class="icon icon-hover icon-profile" onclick="document.location='@Url.Action("", "Profile")/?id=@user.Id'"></div>
                    }
                </td>
                <td>
                    <div id="status_@user.Id" class="icon icon-hover @displayUserStatus(user.UserStatus)" data-status="@user.UserStatus" onclick="setApproval('@user.Id')"></div>
                </td>
                <td>
                @if (user.HasProfile) {
                    <select id="rating_@user.Id" onchange="updateRating('@user.Id')">
                        @for (int i = 1; i <= 9; i++) {
                            string selected = user.Rating == i ? "selected" : "";
                            <option value="@i" @selected>@i</option>
                        }
                    </select>
                }
                </td>
                <td>
                @if (user.HasProfile) {
                    <select id="excl_@user.Id" onchange="updateExclusions('@user.Id')">
                        @foreach (SelectListItem exclusion in exclusionsList) {
                            string selected = exclusion.Value == user.AllowedExclusions ? "selected" : "";
                            <option value="@exclusion.Value" @selected>@exclusion.Text</option>
                        }
                    </select>
                }
                </td>
                <td>
                    @Html.CheckBox("admin", user.Roles.Any(x => x == "ADMIN"), new {@class = "role-checkbox"})
                </td>

                <td>
                    <div class="icon icon-hover icon-list" onclick="window.location='@Url.Action("ExchangeList", "Profile")/@user.Id'"></div>
                </td>
            </tr>

        }
        </tbody>
    </table>
    
</div>

<script>
    var approvalTimeout;

    $(function () {
        
        $('.role-checkbox').on('change', function() {
            updateRoles($(this).parents('tr').data('id'), $(this).prop('name'), $(this).prop('checked'));
        });

        $('[name=approved]').on('change', function() {
            updateApproval($(this).parents('tr').data('id'), $(this).prop('checked'));
        });

    });

    function updateRoles(id, role, add) {
        var data = {
            id: id,
            role: role,
            action: add ? 'Add' : 'Remove'
        }
        $.post('@Url.Action("UpdateRoles")', data);
    }

    function setApproval(id) {
        var el = $('#status_' + id);
        el.removeClass(function(i, v) {
            return (v.match(/(^|\s)icon-userstatus-\S+/g) || []).join(' ');
        });

        clearTimeout(approvalTimeout);
        approvalTimeout = setTimeout(() => updateApproval(id), 500);

        console.log(el);
        console.log(el.data('status'));

        switch (parseInt(el.data('status'))) {
            case 0:
                el.addClass('icon-userstatus-approved');
                el.data('status', 1);
                return;
            case 1:
                el.addClass('icon-userstatus-notapproved');
                el.data('status', -1);
                return;
            default:
                el.addClass('icon-userstatus-none');
                el.data('status', 0);
                return;
        }

    }

    function deleteUser(id) {
        var data = {
            id: id
        }
        $.post('@Url.Action("DeleteUser")', data, function() {
            $('#user_' + id).remove();
        });
    }

    function updateApproval(id) {

        var status = $('#status_' + id).data('status');

        var data = {
            id: id,
            status: status
        }
        $.post('@Url.Action("UpdateApproval")', data);
    }

    function updateExclusions(id) {

        var count = $('#excl_' + id).val();

        var data = {
            id: id,
            count: count
        }
        $.post('@Url.Action("UpdateAllowedExclusionCount")', data);
    }

    function updateRating(id) {

        var rating = $('#rating_' + id).val();

        var data = {
            id: id,
            rating: rating
        }
        $.post('@Url.Action("UpdateRating")', data);
    }

</script>
